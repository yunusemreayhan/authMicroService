services:
  auth_micro_service_backend:
    build:
      context: ./
      dockerfile: tools/docker/auth.Dockerfile
    expose:
      - 3000
    depends_on:
      - migration
    environment:
      - SQL_DSN=postgresql://root:root@auth_micro_service_db:5431/auth_micro_service?sslmode=disable
    networks:
      - frontend
      - backend
    
  migration:
    build:
      context: ./
      dockerfile: tools/docker/migration.Dockerfile
    depends_on:
      auth_micro_service_db:
        condition: service_healthy
    networks:
      - backend

  auth_micro_service_db:
    image: postgres:12-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - PGPORT=5431 
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - PGUSER=root
      - POSTGRES_DB=auth_micro_service
    ports:
      - 5431:5431
    expose:
      - 5431
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  auth_micro_service_proxy:
    image: nginx
    volumes:
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 80:80
    depends_on: 
      - auth_micro_service_backend
    networks:
      - frontend

volumes:
  db-data:
  
networks:
  frontend:
  backend: